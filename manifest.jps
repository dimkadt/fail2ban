name: Fail2Ban
id: fail2ban
version: 0.9.6
type: update
jpsVersion: '0.8'

categories:
- apps/others
- apps/management-and-monitoring
description: Fail2Ban scans log files like and bans IP addresses that make too many
  password failures. It updates firewall rules to reject the IP address. These rules
  can be defined by the user. Fail2Ban can read multiple log files such as sshd or
  Apache Web server ones.

settings:
  removeSettings:
    fields:
    - caption: Banned IP
      name: bannedip
      required: true
      type: string
      regex: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
      regexText: Not valid IP address.

homepage: http://www.fail2ban.org/
logo: /images/Fail2Ban.png
baseUrl: https://raw.githubusercontent.com/jelastic-jps/fail2ban/master/

targetNodes:
  nodeType:
  - tomcat6
  - tomcat7
  - tomcat8
  - tomcat85
  - tomcat9
  - tomcat
  - tomee
  - tomee-dockerized
  - glassfish3
  - glassfish4
  - glassfish
  - jetty6
  - apache
  - apache2
  - nginxphp
  - apache2-ruby
  - nginx-ruby
  - nginx
  - nginx-dockerized
  - nginxphp-dockerized
  - haproxy
  - apache-lb
  - varnish
  - varnish-dockerized

globals:
  installScript: "${baseUrl}/scripts/install.sh"
  setupScript: "${baseUrl}/scripts/setup.sh"
  removeScript: "${baseUrl}/scripts/remove.sh"
  documentationLink: http://www.fail2ban.org/wiki/index.php/Manual
  txtPath: /var/lib/jelastic/keys/bannedip.txt

menu:
- caption: Remove the IP from the Ban list
  confirmText: You are going to remove the IP from the Ban list. Continue?
  loadingText: Performing the IP removing..
  procedure: removeIP
  settings: removeSettings
  successText: The IP was removed.

onInstall:
- installFail2ban
- setupFail2ban

onUninstall: removeFail2Ban

onBeforeRedeployContainer [${targetNodes.nodeGroup}]: removeFail2Ban

onAfterRedeployContainer [${targetNodes.nodeGroup}]:
- installFail2ban
- setupFail2ban
- cmd [${targetNodes.nodeGroup}]: cat ${globals.txtPath}
- removeIP:
    bannedip: ${response.out}

actions:
  removeIP:
    - cmd [${targetNodes.nodeGroup}]: echo '${this.bannedip}' > /var/lib/jelastic/keys/bannedip.txt
    - cmd [${targetNodes.nodeGroup}]: for jail in $(fail2ban-client status | awk -F 'Jail list:' '{ print $2}' | grep -oE '[a-z0-9\-]*'); do fail2ban-client set $jail unbanip ${this.bannedip} 2>&1 | echo '${this.bannedip} was unbanned at '$jail; done
      user: root
  installFail2ban:
    cmd [${targetNodes.nodeGroup}]:
    - curl -sSfL "${globals.installScript}" -o /var/lib/jelastic/keys/install.sh 2>&1
    - "/bin/bash /var/lib/jelastic/keys/install.sh"
    user: root
  setupFail2ban:
    cmd [${targetNodes.nodeGroup}]:
    - curl -sSfL "${globals.setupScript}" -o /var/lib/jelastic/keys/setup.sh 2>&1
    - /bin/bash /var/lib/jelastic/keys/setup.sh "${user.email}" "${baseUrl}"
    user: root
  removeFail2Ban:
    cmd [${targetNodes.nodeGroup}]:
    - curl -sSfL "${globals.removeScript}" -o /var/lib/jelastic/keys/remove.sh 2>&1
    - "/bin/bash /var/lib/jelastic/keys/remove.sh"
    user: root

success: Addon was successufully installed with default Jelastic configuration. If
  you desire to set custom behaviour for your environment - please please refer to
  [documentation](${globals.documentationLink})
